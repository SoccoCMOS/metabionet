att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
brg_stat <- pathways_stat(net,node_sources,ab_name='abund',mode='out')
View(brg_stat)
a4_stat <- pathways_stat(net,c('a4'),ab_name='abund',mode='out')
a5_stat <- pathways_stat(net,c('a5'),ab_name='abund',mode='out')
View(a4_stat)
View(a5_stat)
library(igraph)
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
path_wdist<-function(net,root,par_wd=0,par_ab=0,att_name='wd',ab_name='abund',mode='out'){
ab=get.vertex.attribute(net,ab_name,root)
old_wd=get.vertex.attribute(net,att_name,root)
new_wd=old_wd+par_wd+par_ab*ab
net<-set.vertex.attribute(net,att_name,root,new_wd)
succ=neighbors(graph = net,v=V(net)[root],mode=mode)$name
for(s in succ){
net <- path_wdist(net,root=s,par_wd=new_wd,par_ab=ab,att_name=att_name,ab_name=ab_name,mode=mode)
}
return(net)
}
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
a4_stat <- pathways_stat(net,c('a4'),ab_name='abund',mode='out')
View(a4_stat)
g <<-net
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
path_wdist<-function(net,root,par_wd=0,par_ab=0,att_name='wd',ab_name='abund',mode='out'){
ab=get.vertex.attribute(net,ab_name,root)
old_wd=get.vertex.attribute(net,att_name,root)
new_wd=old_wd+par_wd+par_ab*ab
net<-set.vertex.attribute(net,att_name,root,new_wd)
succ=neighbors(graph = net,v=V(net)[root],mode=mode)$name
for(s in succ){
net <- path_wdist(net,root=s,par_wd=new_wd,par_ab=ab,att_name=att_name,ab_name=ab_name,mode=mode)
}
return(net)
}
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
g <<-net
a4_stat <- pathways_stat(g,c('a4'),ab_name='abund',mode='out')
View(a4_stat)
a5_stat <- pathways_stat(g,c('a5'),ab_name='abund',mode='out')
View(a5_stat)
g <<-net
brg_stat <- pathways_stat(g,c('a4','a5'),ab_name='abund',mode='out')
View(brg_stat)
g
vertex.attributes(g)
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
print(att_name)
print(roads)
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
g <<-net
brg_stat <- pathways_stat(g,c('a4','a5'),ab_name='abund',mode='out')
library(igraph)
path_wdist<-function(net,root,par_wd=0,par_ab=0,att_name='wd',ab_name='abund',mode='out'){
ab=get.vertex.attribute(net,ab_name,root)
old_wd=get.vertex.attribute(net,att_name,root)
new_wd=old_wd+par_wd+par_ab*ab
net<-set.vertex.attribute(net,att_name,root,new_wd)
succ=neighbors(graph = net,v=V(net)[root],mode=mode)$name
for(s in succ){
net <- path_wdist(net,root=s,par_wd=new_wd,par_ab=ab,att_name=att_name,ab_name=ab_name,mode=mode)
}
return(net)
}
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
print(att_name)
print(roads)
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
g <<-net
brg_stat <- pathways_stat(g,c('a4','a5'),ab_name='abund',mode='out')
vertex.attributes(g)
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
brg_stat <- pathways_stat(net,c('a4','a5'),ab_name='abund',mode='out')
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
brg_stat <- pathways_stat(net,c('a4','a5'),ab_name='abund',mode='out')
View(brg_stat)
brg_stat <- pathways_stat(net,c('a4','a5'),ab_name='abund',mode='out')
energypathways_detail(net,c('a4'),c('a5'),labx="four",laby="five")
energypathways_detail <- function(net,x,y,labx="x",laby="y"){   ### Analysis of a single network
X=pathways_stat(net,x)
Y=pathways_stat(net,y)
### X/Y statistics
XF=data.frame(source=labx,sum=X$sum_pathsize, med=X$median_pathsize,mean=X$mean_pathsize,sd=X$sd_pathsize,nbcovered=X$nbcovered_taxa)
YF=data.frame(source=laby,sum=Y$sum_pathsize, med=Y$median_pathsize,mean=Y$mean_pathsize,sd=Y$sd_pathsize,nbcovered=Y$nbcovered_taxa)
comb=data.frame(source=paste(labx,laby,sep="/"),sum=ratio(X$sum_pathsize,Y$sum_pathsize), med=ratio(X$median_pathsize,Y$median_pathsize),mean=ratio(X$mean_pathsize,Y$mean_pathsize),sd=ratio(X$sd_pathsize,Y$sd_pathsize),nbcovered=ratio(X$nbcovered_taxa,Y$nbcovered_taxa))
out=list(X=XF,Y=YF,RatioXY=comb)
return(out)
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
energypathways_detail(net,c('a4'),c('a5'),labx="four",laby="five")
ratio<-function(a,b){
if(is.na(a) || is.na(b)){
rat=0
}
else{
if(b==0){
rat=0
}
else{
rat=a/b
}
}
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
energypathways_detail(net,c('a4'),c('a5'),labx="four",laby="five")
energypathways_detail <- function(net,x,y,labx="x",laby="y"){   ### Analysis of a single network
X=pathways_stat(net,x)
Y=pathways_stat(net,y)
### X/Y statistics
XF=data.frame(source=labx,max_pathsize=X$max_dist,sum=X$sum_pathsize, med=X$median_pathsize,mean=X$mean_pathsize,sd=X$sd_pathsize,nbcovered=X$nbcovered_taxa)
YF=data.frame(source=laby,max_pathsize=Y$max_dist,sum=Y$sum_pathsize, med=Y$median_pathsize,mean=Y$mean_pathsize,sd=Y$sd_pathsize,nbcovered=Y$nbcovered_taxa)
comb=data.frame(source=paste(labx,laby,sep="/"),max=ratio(X$max_pathsize,Y$max_pathsize),sum=ratio(X$sum_pathsize,Y$sum_pathsize), med=ratio(X$median_pathsize,Y$median_pathsize),mean=ratio(X$mean_pathsize,Y$mean_pathsize),sd=ratio(X$sd_pathsize,Y$sd_pathsize),nbcovered=ratio(X$nbcovered_taxa,Y$nbcovered_taxa))
out=list(X=XF,Y=YF,RatioXY=comb)
return(out)
}
ratio<-function(a,b){
if(is.na(a) || is.na(b)){
rat=0
}
else{
if(b==0){
rat=0
}
else{
rat=a/b
}
}
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
energypathways_detail(net,c('a4'),c('a5'),labx="four",laby="five")
x=c('a4')
y=c('a5')
labx="four"
laby="five"
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
X=pathways_stat(net,x)
X
Y
Y=pathways_stat(net,y)
Y
### X/Y statistics
XF=data.frame(source=labx,max_pathsize=X$max_dist,sum=X$sum_pathsize, med=X$median_pathsize,mean=X$mean_pathsize,sd=X$sd_pathsize,nbcovered=X$nbcovered_taxa)
YF=data.frame(source=laby,max_pathsize=Y$max_dist,sum=Y$sum_pathsize, med=Y$median_pathsize,mean=Y$mean_pathsize,sd=Y$sd_pathsize,nbcovered=Y$nbcovered_taxa)
comb=data.frame(source=paste(labx,laby,sep="/"),max=ratio(X$max_pathsize,Y$max_pathsize),sum=ratio(X$sum_pathsize,Y$sum_pathsize), med=ratio(X$median_pathsize,Y$median_pathsize),mean=ratio(X$mean_pathsize,Y$mean_pathsize),sd=ratio(X$sd_pathsize,Y$sd_pathsize),nbcovered=ratio(X$nbcovered_taxa,Y$nbcovered_taxa))
comb=data.frame(source=paste(labx,laby,sep="/"),max=ratio(X$max_dist,Y$max_dist),sum=ratio(X$sum_pathsize,Y$sum_pathsize), med=ratio(X$median_pathsize,Y$median_pathsize),mean=ratio(X$mean_pathsize,Y$mean_pathsize),sd=ratio(X$sd_pathsize,Y$sd_pathsize),nbcovered=ratio(X$nbcovered_taxa,Y$nbcovered_taxa))
out=list(X=XF,Y=YF,RatioXY=comb)
out
25/8
18/25
ratio(X$max_dist,Y$max_dist)
X$max_dist
Y$max_dist
25/18
el<-read.csv2('edge_list.csv')
library(igraph)
path_wdist<-function(net,root,par_wd=0,par_ab=0,att_name='wd',ab_name='abund',mode='out'){
ab=get.vertex.attribute(net,ab_name,root)
old_wd=get.vertex.attribute(net,att_name,root)
new_wd=old_wd+par_wd+par_ab*ab
net<-set.vertex.attribute(net,att_name,root,new_wd)
succ=neighbors(graph = net,v=V(net)[root],mode=mode)$name
for(s in succ){
net <- path_wdist(net,root=s,par_wd=new_wd,par_ab=ab,att_name=att_name,ab_name=ab_name,mode=mode)
}
return(net)
}
pathways_stat<-function(net,node_sources,ab_name='abund',mode='out'){
### Computes pathways statistics =>
#net: igraph object
## node_sources: output of get_energy_roots
if(vcount(net)==0){
print("Warning empty or disconnected network")
brg_stat=list(sum_pathsize=0,mean_pathsize=0,median_pathsize=0,sd_pathsize=0,covered_taxa=NULL,nbcovered_taxa=0)
}
else{
deb <<- net
sums=vector(mode="numeric",length=length(node_sources))
moys=vector(mode="numeric",length=length(node_sources))
meds=vector(mode="numeric",length=length(node_sources))
sds=vector(mode="numeric",length=length(node_sources))
maxs=vector(mode="numeric",length=length(node_sources))
ncov=vector(mode="character")
cpt=0
for (root in node_sources){
att_name=paste('wd',root,sep = '_')
net <- set.vertex.attribute(net,att_name,index=V(net),value=rep(0,vcount(net)))
net <- path_wdist(net=net,root=root,par_wd=0,par_ab=0,att_name=att_name,ab_name=ab_name,mode=mode)
cpt=cpt+1
roads=vertex.attributes(net)[att_name][[1]]
names(roads)=V(net)$name
sums[cpt]=sum(roads)
moys[cpt]=mean(roads)
meds[cpt]=median(roads)
sds[cpt]=sd(roads)
maxs[cpt]=max(roads)
ncov=union(ncov,names(which(roads>0)))
}
nbcov=length(ncov)
brg_stat=list(sum_pathsize=sum(sums),mean_pathsize=mean(moys),median_pathsize=median(meds),sd_pathsize=sd(sds),covered_taxa=ncov,nbcovered_taxa=nbcov,max_dist=max(maxs))
}
return(brg_stat)
}
ratio<-function(a,b){
if(is.na(a) || is.na(b)){
rat=0
}
else{
if(b==0){
rat=0
}
else{
rat=a/b
}
}
}
energypathways_detail <- function(net,x,y,labx="x",laby="y"){   ### Analysis of a single network
X=pathways_stat(net,x)
Y=pathways_stat(net,y)
### X/Y statistics
XF=data.frame(source=labx,max_pathsize=X$max_dist,sum=X$sum_pathsize, med=X$median_pathsize,mean=X$mean_pathsize,sd=X$sd_pathsize,nbcovered=X$nbcovered_taxa)
YF=data.frame(source=laby,max_pathsize=Y$max_dist,sum=Y$sum_pathsize, med=Y$median_pathsize,mean=Y$mean_pathsize,sd=Y$sd_pathsize,nbcovered=Y$nbcovered_taxa)
comb=data.frame(source=paste(labx,laby,sep="/"),max=ratio(X$max_dist,Y$max_dist),sum=ratio(X$sum_pathsize,Y$sum_pathsize), med=ratio(X$median_pathsize,Y$median_pathsize),mean=ratio(X$mean_pathsize,Y$mean_pathsize),sd=ratio(X$sd_pathsize,Y$sd_pathsize),nbcovered=ratio(X$nbcovered_taxa,Y$nbcovered_taxa))
out=list(X=XF,Y=YF,RatioXY=comb)
return(out)
}
el<-read.csv2('edge_list.csv')
nl<-read.csv2('node_list.csv')
net<-graph_from_data_frame(el, directed = TRUE, vertices = nl)
plot.igraph(net)
node_sources=c('a4','a5')
ab_name='abund'
mode='out'
#brg_stat <- pathways_stat(net,c('a4','a5'),ab_name='abund',mode='out')
energypathways_detail(net,x=c('a4'),y=c('a5'),labx="four",laby="five")
#a5_stat <- pathways_stat(g,c('a5'),ab_name='abund',mode='out')
